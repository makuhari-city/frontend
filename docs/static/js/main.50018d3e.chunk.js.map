{"version":3,"sources":["user.tsx","TitleBar.tsx","MakeNewUser.tsx","database.tsx","VotingForms.tsx","vote.tsx","VotingResults.tsx","VotingInfo.tsx","VotingSession.tsx","Main.tsx","ListView.tsx","Topic.tsx","CreateTopic.tsx","EditTopic.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["checkSavedUser","userData","localStorage","getItem","JSON","parse","TitleBar","className","to","MakeNewUser","useState","newUser","setNewUser","nameInput","setNameInput","isUserSaved","setIsUserSaved","color","setColor","addUser","name","user","uid","uuidv4","createUser","setItem","stringify","saveUser","substring","console","error","type","placeholder","value","onKeyUp","event","key","onChange","e","target","onClick","style","href","baseUrl","prefix","fetchList","a","fetch","res","json","list","fetchHeader","id","header","fetchTopicData","info","fetchResult","hash","postNewTopic","title","description","partial","method","body","headers","result","log","postTopic","topic","updateVote","topic_id","vote","newVote","VotingForms","initialVotes","votes","setVotes","handleChange","uuid","parseFloat","newVotes","handleIncrementValueButton","inc","newvalue","newvotes","Object","keys","map","k","delegates","includes","policies","update","topicData","response","data","VotingResults","setResult","useEffect","fetched","status","latest","calculated","checkResult","undefined","borda","borda_order","item","liquid","fptp","renderResult","VotingInfo","open","options","forEach","userVotes","getOptions","VotingSession","setInfo","setHash","latestInfo","getInfo","checkParams","p","cUrl","window","location","search","URLSearchParams","get","Main","props","setUser","savedUser","topicId","noThrow","ListView","setList","isLoading","setIsLoading","isEmpty","setIsEmpty","newList","length","getList","items","Topic","CreateTopic","setTitle","setDesc","setError","setId","checkInput","mes","url","EditTopic","setData","desc","newPolicy","setNewPolicy","setPolicies","d","fetchData","reconTopic","new_data","values","n","v4","new_topic","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50018d3e.chunk.js","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\n\nexport interface User {\n  name: string;\n  uid: string;\n}\n\nexport const createUser = (name: string): User => {\n  return { uid: uuidv4(), name } as User;\n};\n\nexport const saveUser = (user: User) => {\n  localStorage.setItem(\"user\", JSON.stringify(user));\n};\n\nexport const checkSavedUser = (): null | User => {\n  const userData = localStorage.getItem(\"user\");\n  if (userData) {\n    const user: User = JSON.parse(userData);\n    return user;\n  } else {\n    return null;\n  }\n};\n\n\n","import { Link } from \"@reach/router\";\n\nconst TitleBar = () => (\n  <header>\n    <nav className=\"container mt-32 mb-32 max-w-screen-lg mx-auto\">\n      <div className=\"w-3/5 flex items-center justify-between\">\n        <Link to=\"/frontend/\" className=\"hover:underline font-bold\">\n          METACITY 「多層都市」幕張市\n        </Link>\n        <div className=\"flex justify-end\"> <Link to=\"/frontend/list/\" className=\"px-2 hover:underline\">\n            list\n          </Link>\n          <Link to=\"/frontend/topic/create/\" className=\"pl-2 hover:underline\">\n            new topic\n          </Link>\n        </div>\n      </div>\n    </nav>\n  </header>\n);\n\nexport default TitleBar;\n","import { useState } from \"react\";\nimport { createUser, saveUser, User } from \"./user\";\nimport TitleBar from \"./TitleBar\";\n// import Canvas from \"./Canvas\";\n\nconst MakeNewUser = () => {\n  const [newUser, setNewUser] = useState<undefined | User>();\n  const [nameInput, setNameInput] = useState(\"\");\n  const [isUserSaved, setIsUserSaved] = useState(false);\n  const [color, setColor] = useState(\"#eceff4\");\n\n  const handleKey = (event: { key: string }) => {\n    if (event.key === \"Enter\") {\n      addUser(nameInput);\n    }\n  };\n\n  const addUser = (name: string) => {\n    if (name !== \"\") {\n      const user = createUser(name);\n      saveUser(user); // saves this to local storage\n\t  setNewUser(user);\n      setIsUserSaved(true);\n\t  setColor(`#${user.uid.substring(0,5)}`);\n\t  setNameInput(\"\");\n    } else {\n      console.error(\"username is empty\");\n    }\n  };\n\n  const handleChange = (value: string) => {\n    setNameInput(value);\n  };\n\n  return (\n    <>\n      <TitleBar />\n      <div className=\"container mx-auto px-6 py-16 max-w-screen-lg bg-nord-0 bg-opacity-90 rounded\">\n        <div className=\"font-bold mb-3\">Citizen Registration 住民登録</div>\n\t\t  <div className=\"font-thin text-xs mb-8\">幕張市プロジェクト参加には住民登録が必要です。</div>\n\n        <div className=\"grid grid-cols-2 w-3/5 justify-items-end\">\n\t\t\t<div className=\"self-center\">username:</div>\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"johndoe\"\n              name=\"name\"\n\t\t\t\tvalue={nameInput}\n              className=\"px-6 py-3 placeholder-gray-400 text-nord-0 relative bg-nord-4 rounded text-sm border border-nord-1 outline-none focus:outline-none focus:ring\"\n              onKeyUp={handleKey}\n              onChange={(e) => handleChange(e.target.value)}\n            />\n          </div>\n        </div>\n\n        <div className=\"w-3/5 grid justify-items-end mt-16\">\n          <button\n            onClick={() => {\n              addUser(nameInput);\n            }}\n            className=\"transition duration-150 ease-in bg-nord-1 hover:bg-nord-2 text-nord-4 border border-nord-5 font-bold py-2 px-6 rounded\"\n          >\n            register\n          </button>\n        </div>\n\n        {isUserSaved && (\n          <div className=\"w-3/5 grid grid-justify-items-end\">\n\t\t\t<div className=\"text-nord-9 my-4\">\n\t\t\t\t'{newUser!.name}' created with id <span style={{color:`${{color}}`}}>{newUser!.uid.substring(0,6)}</span>\n\t\t\t</div>\n            <a href=\"./\" className=\"ease-in duration-150 bg-nord-1 hover:bg-nord-2 text-nord-4 font-bold py-2 px-6 rounded text-center\" >go to list</a>\n          </div>\n        )}\n      </div>\n\t\t{/*<Canvas />*/}\n    </>\n  );\n};\n\nexport default MakeNewUser;\n","const baseUrl = \"https://vote.metacity.jp\";\nconst prefix = \"db\";\n\nexport interface ITopicHeader {\n  id: string;\n  hash: string;\n  title: string;\n}\n\nexport interface ITopicData {\n  id: string;\n  title: string;\n  description: string;\n  delegates: { [id: string]: string };\n  policies: { [id: string]: string };\n  votes: { [src: string]: { [dest: string]: number } };\n}\n\nexport const fetchList = async (): Promise<ITopicHeader[]> => {\n  const res = await fetch(`${baseUrl}/${prefix}/list/`);\n  const list: ITopicHeader[] = await res.json();\n  return list;\n};\n\nexport const fetchHeader = async (id: string): Promise<ITopicHeader> => {\n  const res = await fetch(`${baseUrl}/${prefix}/header/${id}`);\n  const header: ITopicHeader = await res.json();\n  return header;\n};\n\nexport const fetchTopicData = async (id: string): Promise<ITopicData> => {\n  const res = await fetch(`${baseUrl}/${prefix}/topic/${id}/`);\n  const info: any = await res.json();\n  return info as ITopicData;\n};\n\nexport const fetchResult = async (hash: string): Promise<any | null> => {\n  const res = await fetch(`${baseUrl}/${prefix}/result/${hash}/`);\n  const info: any = await res.json();\n  if (!info) {\n    return null;\n  } else {\n    return info;\n  }\n};\n\ninterface IPartialTopic {\n  title: string;\n  description: string;\n}\n\ninterface INewTopicResponse {\n  status: string;\n  id: string;\n  hash: string;\n}\n\nexport const postNewTopic = async (\n  title: string,\n  description: string\n): Promise<INewTopicResponse> => {\n  const partial: IPartialTopic = { title, description };\n  const res = await fetch(`${baseUrl}/${prefix}/topic/new/`, {\n    method: \"POST\",\n    body: JSON.stringify(partial),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  const result: INewTopicResponse = await res.json();\n  console.log(result);\n\n  return result;\n};\n\nexport const postTopic = async (topic: ITopicData) => {\n  const res = await fetch(`${baseUrl}/${prefix}/topic/raw/`, {\n    method: \"POST\",\n    body: JSON.stringify(topic),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  const result: { [f: string]: string } = await res.json();\n  return result;\n};\n\nexport const postResult = async (hash: string, result: any) => {\n  const res = await fetch(`${baseUrl}/${prefix}/result/${hash}/`, {\n    method: \"POST\",\n    body: JSON.stringify(result),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  let info = await res.json();\n  console.log(info);\n};\n\nexport const updateVote = async (\n  topic_id: string,\n  id: string,\n  name: string,\n  vote: { [to: string]: number }\n) => {\n  const newVote = {\n    id,\n    name,\n    vote,\n  };\n\n  const res = await fetch(\n    `${baseUrl}/${prefix}/topic/update/${topic_id}/delegate/`,\n    {\n      method: \"POST\",\n      body: JSON.stringify(newVote),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  const info: any = await res.json();\n  console.log(info);\n};\n","import { User } from \"./user\";\nimport { updateVote, ITopicData } from \"./database\";\nimport { useState } from \"react\";\n\ninterface VotingFormsProps {\n  info: ITopicData;\n  initialVotes: { [to: string]: number };\n  user: User;\n  id: string;\n}\n\nconst VotingForms = ({ info, initialVotes, user, id }: VotingFormsProps) => {\n  const [votes, setVotes] = useState(initialVotes);\n\n  const getString = (uuid: string): string => {\n    return Object.keys(info.delegates).includes(uuid)\n      ? info.delegates[uuid]\n      : info.policies[uuid];\n  };\n\n  const handleChange = (uuid: string) => {\n    const handeChangeUuid = (e: React.ChangeEvent<HTMLInputElement>) => {\n      let value = parseFloat(e.target.value);\n\n      if (!value) {\n        value = 0.0;\n      }\n\n      if (value < 1) {\n        value = 0.0;\n      }\n\n      let newVotes = { ...votes, [uuid]: value };\n      setVotes(newVotes);\n    };\n\n    return handeChangeUuid;\n  };\n\n  const handleIncrementValueButton = (uuid: string, inc: boolean) => {\n    const handleIncrement = () => {\n      const value = inc ? 1 : -1;\n\n      let newvalue = votes[uuid] + value;\n\n      if (newvalue < 0) {\n        newvalue = 0;\n      }\n\n      let newvotes = { ...votes, [uuid]: newvalue };\n      setVotes(newvotes);\n    };\n\n    return handleIncrement;\n  };\n\n  const renderOptions = () => {\n    return Object.keys(votes).map((k) => (\n      <div className=\"ml-3 mb-3 p-2 flex flex-row bg-nord-0 bg-opacity-50 rounded\">\n        <div className=\"flex items-center justify-center font-medium\">\n          {getString(k)}\n        </div>\n        <div className=\"flex-grow\"></div>\n        <div className=\"inline-flex\">\n          <button\n            className=\"font-bold px-3 bg-nord-1 hover:bg-nord-3 rounded-l\"\n            onClick={handleIncrementValueButton(k, false)}\n          >\n            -\n          </button>\n          <input\n            className=\"px-3 py-1 w-12 text-nord-0 bg-nord-4 font-medium\"\n            onChange={handleChange(k)}\n            value={votes[k]}\n          />\n          <button\n            className=\"font-bold px-3 bg-nord-1 hover:bg-nord-3 rounded-r\"\n            onClick={handleIncrementValueButton(k, true)}\n          >\n            +\n          </button>\n          {/*\n          <button className=\"rounded px-3 ml-3 bg-nord-11 bg-opacity-70 hover:bg-opacity-90\">\n            x\n\t\t  </button>*/}\n        </div>\n      </div>\n    ));\n  };\n\n  const handleSubmit = () => {\n    const update = async () => updateVote(id, user.uid, user.name, votes);\n    update();\n  };\n\n  return (\n    <div className=\"container mx-auto max-w-screen-lg p-3\">\n      <div className=\"w-3/5\">{renderOptions()}</div>\n      {/*\n      <div className=\"w-3/5 grid justify-items-end\">\n\t\t  <button className=\"p-2 rounded bg-nord-0 hover:bg-nord-2\">\n          Add New Option\n\t\t  </button>\n\t\t  </div>*/}\n      <div className=\"mt-3 w-3/5 grid justify-items-end\">\n        <button\n          className=\"p-2 rounded border bg-nord-9 font-bold text-nord-0 hover:bg-nord-10 bg-opacity-80 duration-500 ease-in\"\n          onClick={handleSubmit}\n        >\n          Update vote\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default VotingForms;\n","import {ITopicData} from \"./database\";\n\nexport const baseUrl = \"https://vote.metacity.jp\";\n\nexport const vote = async (topicData: ITopicData) => {\n\n  const response = await fetch(`${baseUrl}/rpc/`, {\n    // mode: \"cors\",\n    method: \"POST\",\n    body: JSON.stringify(topicData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data: {[method: string]: any} = await response.json();\n\n  return data;\n};\n","import { useEffect, useState } from \"react\";\nimport { vote } from \"./vote\";\nimport {\n  ITopicData,\n  fetchResult,\n  postResult,\n  fetchHeader,\n  fetchTopicData,\n} from \"./database\";\n\ninterface VotingResultsProps {\n  info: ITopicData;\n  hash: string;\n}\n\ninterface IResult {\n  borda: [string, number][];\n  liquid: [{ [what: string]: number }, { [who: string]: number }];\n  fptp: [string, number][];\n}\n\nconst VotingResults = ({ info, hash }: VotingResultsProps) => {\n  let [result, setResult] = useState<IResult | null | string>(null);\n  useEffect(() => {\n    const checkResult = async () => {\n      // get the latest header;\n      let header = await fetchHeader(info.id);\n\n      const fetched = await fetchResult(header.hash);\n\n      if (fetched.status === \"error\") {\n        setResult(\n          \"result not found in database. sending calculation result to `vote`.\"\n        );\n\n        let latest = await fetchTopicData(header.id);\n\n        let calculated = await vote(latest);\n\n        setResult(JSON.stringify(calculated, null, 2));\n      } else {\n        setResult(JSON.stringify(fetched, null, 2));\n      }\n    };\n\n    checkResult();\n  }, [hash, info]);\n\n  const updateResult = () => {\n    const update = async () => {\n      const header = await fetchHeader(info.id);\n      if (header.id !== hash) {\n        const fetched = await fetchResult(header.hash);\n\n        if (fetched.status === \"error\") {\n          setResult(\n            \"result not found in database. sending calculation result to `vote`.\"\n          );\n          let latest = await fetchTopicData(header.id);\n          let calculated = await vote(latest);\n\n          setResult(JSON.stringify(calculated, null, 2));\n        } else {\n          setResult(JSON.stringify(fetched, null, 2));\n        }\n      }\n    };\n    update();\n  };\n\n  const renderResult = (result: IResult, info: ITopicData) => {\n    if (!result || result.borda === undefined) return;\n\n    const borda_order = result.borda\n      .map((item) => info.policies[item[0]])\n      .map((e) => <li>e</li>);\n    const liquid_policies = Object.keys(result.liquid[0]).map((e) => [\n      info.policies[e],\n      result.liquid[0][e],\n    ]);\n    const liquid_influence = Object.keys(result.liquid[1]).map((e) => [\n      info.delegates[e],\n      result.liquid[1][e],\n    ]);\n    const fptp = result.fptp\n      .map((item) => info.policies[item[0]])\n      .map((e) => <li>e</li>);\n\n    return (\n      <>\n        <p>borda</p>\n        <ol>{borda_order}</ol>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <details className=\"text-sm p-2 mt-4\">\n        <summary className=\"p-3 bg-nord-0 bg-opacity-10 border border-nord-3 rounded w-3/5\">\n          Results\n        </summary>\n        {renderResult(result as IResult, info)}\n        <pre className=\"bg-nord-0 bg-opacity-90 text-xs p-3 mt-3 rounded w-3/5\">\n          {result}\n        </pre>\n        <button\n          className=\"mt-3 mb-8 p-2 rounded border bg-nord-9 font-bold text-nord-0 hover:bg-nord-10 bg-opacity-80 duration-500 ease-in\"\n          onClick={updateResult}\n        >\n          Update\n        </button>\n      </details>\n    </>\n  );\n};\n\nexport default VotingResults;\n","import { ITopicData } from \"./database\";\nimport { User } from \"./user\";\nimport VotingForms from \"./VotingForms\";\nimport VotingResults from \"./VotingResults\";\nimport TitleBar from \"./TitleBar\";\nimport { Link } from \"@reach/router\";\n// import Canvas from \"./Canvas\";\n\ninterface VotingInfoProp {\n  info: ITopicData;\n  user: User;\n  hash: string;\n}\n\nconst VotingInfo = ({ info, user, hash }: VotingInfoProp) => {\n  const getOptions = (): { [to: string]: number } => {\n    let options: { [to: string]: number } = {};\n\n    Object.keys(info.policies).forEach((to) => (options[to] = 0.0));\n    Object.keys(info.delegates).forEach((to) => (options[to] = 0.0));\n\n    // fill in the current value\n    const userVotes = info.votes[user.uid];\n    if (userVotes) {\n      Object.keys(userVotes).forEach((to) => (options[to] = userVotes[to]));\n    }\n\n    delete options[user.uid];\n\n    return options;\n  };\n\n  return (\n    <>\n      <TitleBar />\n      <div className=\"container max-w-screen-lg mx-auto\">\n        <div className=\"flex w-3/5 p-2\">\n          <h1 className=\"flex-none font-bold\">{info.title}</h1>\n\t\t\t<div className=\"flex-grow\"></div>\n          <div className=\"flex-none\">\n            <Link to=\"edit\" className=\"hover:underline text-xs\">\n              edit\n            </Link>\n          </div>\n        </div>\n          <p className=\"bg-nord-0 bg-opacity-90 text-xs p-3 mt-3 rounded w-3/5\">\n            {info.description}\n          </p>\n        <details open className=\"p-2\">\n          <summary className=\"p-3 bg-nord-0 bg-opacity-10 border border-nord-3 rounded w-3/5 text-sm\">\n            Votes\n          </summary>\n\n          <VotingForms\n            info={info}\n            initialVotes={getOptions()}\n            user={user}\n            id={info.id}\n          />\n        </details>\n        <VotingResults info={info} hash={hash} />\n      </div>\n      {/*<Canvas />*/}\n    </>\n  );\n};\n\nexport default VotingInfo;\n","import { useEffect, useState } from \"react\";\nimport VotingInfo from \"./VotingInfo\";\nimport { fetchTopicData, ITopicData, fetchHeader, ITopicHeader } from \"./database\";\nimport { User } from \"./user\";\nimport TitleBar from \"./TitleBar\";\n\ninterface VotingSessionProps {\n  id: string;\n  user: User;\n}\n\nconst VotingSession = ({ id, user }: VotingSessionProps) => {\n  const [info, setInfo] = useState<null | ITopicData>(null);\n  const [hash, setHash] = useState(\"\");\n  useEffect(() => {\n    const getInfo = async () => {\n      let latestInfo: ITopicData = await fetchTopicData(id);\n\t  let header: ITopicHeader = await fetchHeader(id);\n\t  setHash(header.hash);\n      setInfo(latestInfo);\n    };\n    getInfo();\n  }, [id]);\n\n  if (info) {\n    return <VotingInfo info={info} user={user} hash={hash}/>;\n  } else {\n    return (\n      <div>\n        <TitleBar/>\n        <div className=\"container mx-auto max-w-screen-lg p-2\">\n\t\t\tLoading Topic (#{id.substring(0,5)}) information...\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default VotingSession;\n","import { User, checkSavedUser } from \"./user\";\nimport MakeNewUser from \"./MakeNewUser\";\nimport VotingSession from \"./VotingSession\";\nimport { useEffect, useState } from \"react\";\nimport { RouteComponentProps, Redirect } from \"@reach/router\";\n\nconst Main = (props: RouteComponentProps) => {\n\n  const [user, setUser] = useState<null | User>(null);\n\n  useEffect(() => {\n    let savedUser = checkSavedUser();\n    setUser(savedUser);\n  }, []);\n\n  // first make sure we have a user\n  if (!user) {\n    return <MakeNewUser />;\n  }\n\n  const topicId = checkParams(\"t\");\n\n  if (!topicId) {\n    return <Redirect to=\"/frontend/list/\" noThrow/>;\n  }\n\n  return <VotingSession id={topicId} user={user} />;\n};\n\nconst checkParams = (p: string): string | null => {\n  let cUrl = window.location.search;\n  const params = new URLSearchParams(cUrl);\n  return params.get(p);\n\n}\n\nexport default Main;\n","import { checkSavedUser, User } from \"./user\";\nimport { ITopicHeader, fetchList } from \"./database\";\nimport { useEffect, useState } from \"react\";\nimport TitleBar from \"./TitleBar\";\nimport { RouteComponentProps, Redirect, Link } from \"@reach/router\";\n// import Canvas from \"./Canvas\";\n\nconst ListView = (props: RouteComponentProps) => {\n  const [list, setList] = useState<ITopicHeader[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isEmpty, setIsEmpty] = useState(true);\n\n  useEffect(() => {\n    const getList = async () => {\n      const newList = await fetchList();\n\t  setIsLoading(false);\n      if (newList.length > 0) {\n        setIsEmpty(false);\n        setList(newList);\n      }\n    };\n    getList();\n  }, []);\n\n  const renderList = (items: ITopicHeader[]) => (\n      <div>\n        <h1 className=\"px-4 text-bold\">topics:</h1>\n        <ul className=\"p-4 w-3/5\">\n          {items.map((item) => (\n            <li className=\"mb-1\">\n              <Link \n                className=\"duration-500 ease-out p-4 flex space-x-4 bg-nord-1 hover:bg-nord-2\"\n                to={`../topic/${item.id}/`}\n              >\n                {item.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n\n  return (\n    <>\n      <TitleBar />\n      <div className=\"container max-w-screen-lg py-8 mx-auto bg-nord-0 bg-opacity-90 min-h-1/4 rounded\">\n\t\t  {isLoading ? (\n\t\t\t  <div className=\"p-4\">Loading topics...</div>\n\t\t  ) : (isEmpty ? (\n          <div className=\"p-4\">0 topics. Nothing to vote.</div>\n        ) : (\n          renderList(list)\n        ))}\n        \n      </div>\n\t\t{/*<Canvas />*/}\n    </>\n  );\n};\n\nexport default ListView;\n","import { RouteComponentProps, Redirect } from \"@reach/router\";\nimport { User, checkSavedUser } from \"./user\";\nimport { useState, useEffect } from \"react\";\nimport {\n  fetchTopicData,\n  ITopicData,\n  fetchHeader,\n  ITopicHeader,\n} from \"./database\";\nimport VotingInfo from \"./VotingInfo\";\nimport TitleBar from \"./TitleBar\";\n\ninterface TopicProps extends RouteComponentProps {\n  topicId?: string;\n}\n\nconst Topic = (props: TopicProps) => {\n  const [info, setInfo] = useState<null | ITopicData>(null);\n  const [user, setUser] = useState<null | User>(null);\n  const [hash, setHash] = useState(\"\");\n\n  useEffect(() => {\n    const getInfo = async () => {\n      let latestInfo: ITopicData = await fetchTopicData(props.topicId!);\n      let header: ITopicHeader = await fetchHeader(props.topicId!);\n      setHash(header.hash);\n      setInfo(latestInfo);\n    };\n    getInfo();\n\n    setUser(checkSavedUser());\n  }, [props.topicId]);\n\n  if (!props.topicId) {\n    return <Redirect to=\"../../list\" />;\n  }\n\n  if (info && user) {\n    return <VotingInfo info={info} user={user} hash={hash} />;\n  } else {\n    return (\n      <div>\n        <TitleBar />\n        <div className=\"container mx-auto max-w-screen-lg p-2\">\n          Loading Topic (#{props.topicId!.substring(0, 5)}) information...\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Topic;\n","import { RouteComponentProps } from \"@reach/router\";\nimport TitleBar from \"./TitleBar\";\nimport { useState } from \"react\";\nimport { postNewTopic } from \"./database\";\nimport { Redirect } from \"@reach/router\";\n\nconst CreateTopic = (props: RouteComponentProps) => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDesc] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [id, setId] = useState(\"\");\n\n  const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  };\n\n  const handleDescChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setDesc(e.target.value);\n  };\n\n  const checkInput = (value: string): boolean => {\n    return value !== \"\";\n  };\n\n  const postTopic = () => {\n    let mes = \"\";\n\n    if (!checkInput(title)) {\n      mes += \"Title is empty. \";\n    }\n\n    if (!checkInput(description)) {\n      mes += \"Description is empty.\";\n    }\n\n    setError(mes);\n\n\tconst postTopic = async (title: string, description: string) => {\n      const res = await postNewTopic(title, description);\n\t  setId(res.id);\n    };\n\n    if (mes === \"\") {\n      postTopic(title, description);\n\t  setTitle(\"\");\n\t  setDesc(\"\");\n\t  const url = `/frontend/topic/${id}`;\n\t  return <Redirect to={url}/>\n\t}\n  };\n\n  return (\n    <>\n      <TitleBar />\n      <div className=\"container max-w-screen-lg mx-auto\">\n        <h1 className=\"p-2\"> create topic </h1>\n        <div className=\"w-3/5 p-2\">\n          <div className=\"my-3\">\n            title: <br />\n            <input\n              className=\"px-3 py-1 mt-1 mb-2 text-nord-0 bg-nord-4 font-medium rounded w-full\"\n              onChange={handleTitleChange}\n              value={title}\n            />\n          </div>\n          <div className=\"my-3\">\n            description* : <br />\n            <textarea\n              className=\"px-3 py-1 w-12 mt-1 mb-2 h-40 text-nord-0 bg-nord-4 font-medium rounded w-full\"\n              onChange={handleDescChange}\n              value={description}\n            />\n          </div>\n          <div>\n            <button\n              className=\"font-bold px-3 py-2 bg-nord-1 hover:bg-nord-3 rounded disabled:bd-opacity-10 disabled:text-nord-5\"\n              onClick={postTopic}\n            >\n              Add Topic\n            </button>\n          </div>\n          <div className=\"text-nord-11 mt-2\">{error}</div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CreateTopic;\n","import { RouteComponentProps, Redirect } from \"@reach/router\";\nimport { useState, useEffect } from \"react\";\nimport { fetchTopicData, ITopicData, postTopic } from \"./database\";\nimport TitleBar from \"./TitleBar\";\nimport { v4 } from \"uuid\";\n\ninterface EditTopicProps extends RouteComponentProps {\n  topicId?: string;\n}\n\nconst EditTopic = (props: EditTopicProps) => {\n  const [data, setData] = useState<null | ITopicData>(null);\n\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [newPolicy, setNewPolicy] = useState(\"\");\n  const [policies, setPolicies] = useState<{ [to: string]: string }>({});\n\n  useEffect(() => {\n    if (props.topicId) {\n      const fetchData = async () => {\n        const d = await fetchTopicData(props.topicId!);\n\n        setTitle(d.title);\n        setDesc(d.description);\n        setPolicies(d.policies);\n\n        setData(d);\n      };\n      fetchData();\n    }\n  }, []);\n\n  const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  };\n\n  const handleChangeNewPolicy = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNewPolicy(e.target.value);\n  };\n\n  const handleDescChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setDesc(e.target.value);\n  };\n\n  const reconTopic = (): ITopicData => {\n    let new_data = data!;\n    new_data.title = title;\n    new_data.description = desc;\n    new_data.policies = policies;\n\n    return new_data;\n  };\n\n  const updateTopic = () => {\n\n\t  const update = async () => {\n\t\t\tconst new_topic = reconTopic();\n\t\t\tconst result = await postTopic(new_topic);\n\t\t\tconsole.log(result);\n\t\t\tsetData(new_topic);\n\t  }\n\t\n\t  update();\n  };\n\n  const renderOptions = () => {\n    return Object.keys(policies).map((k) => (\n      <li className=\"p-2\">{policies[k]}</li>\n    ));\n  };\n\n  const addOption = () => {\n    // new polict needs to be unique and not empty\n    if (newPolicy !== \"\" && !Object.values(policies).includes(newPolicy)) {\n      let n: { [to: string]: string } = {};\n      n[`${v4()}`] = newPolicy;\n      //check uniqueness\n      setPolicies({ ...policies, ...n });\n    }\n    setNewPolicy(\"\");\n  };\n\n  if (!props.topicId) {\n    return <Redirect to=\"/frontend/list/\" noThrow />;\n  } else {\n    return (\n      <>\n        <TitleBar />\n        <p className=\"text-xs\">{props.topicId}</p>\n        <div className=\"container max-w-screen-lg mx-auto\">\n          <input\n            className=\"font-bold\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <textarea\n            className=\"font-bold\"\n            value={desc}\n            onChange={handleDescChange}\n          />\n        </div>\n        <ul>{renderOptions()}</ul>\n        <input\n          className=\"font-bold\"\n          value={newPolicy}\n          onChange={handleChangeNewPolicy}\n        />\n        <button onClick={addOption}>add Option</button>\n        <button onClick={updateTopic}>update Topic</button>\n      </>\n    );\n  }\n};\n\nexport default EditTopic;\n","import { Router } from \"@reach/router\";\nimport Main from \"./Main\";\nimport ListView from \"./ListView\";\nimport Topic from \"./Topic\";\nimport CreateTopic from \"./CreateTopic\";\nimport EditTopic from \"./EditTopic\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Main path=\"frontend\" />\n      <ListView path=\"frontend/list\" />\n      <Topic path=\"frontend/topic/:topicId\" />\n      <CreateTopic path=\"frontend/topic/create\" />\n\t  <EditTopic path=\"frontend/topic/:topicId/edit\" />\n    </Router>\n  );\n};\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}